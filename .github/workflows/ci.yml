name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: python:3.11-bullseye
      options: --user root

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - "5432:5432"

    steps:
    - uses: actions/checkout@v4

    - name: Verify Python installation
      run: |
        python -V
        pip -V

    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y build-essential libpq-dev

    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip list || echo "Pip list failed"
        pip install django psycopg2-binary
        pip install -r src/requirements/base.txt
        pip install pytest pytest-cov pytest-django

    - name: Verify Django installation
      run: |
        python -c "import django; print('Django version:', django.__version__)"

    - name: Create test settings
      run: |
        mkdir -p src/core/
        echo "SECRET_KEY = 'test-secret-key'" > src/core/settings_test.py
        echo "INSTALLED_APPS = ['django.contrib.contenttypes', 'django.contrib.auth', 'apps.listings']" >> src/core/settings_test.py
        echo "DATABASES = {'default': {'ENGINE': 'django.db.backends.postgresql', 'NAME': '${{ env.POSTGRES_DB }}', 'USER': '${{ env.POSTGRES_USER }}', 'PASSWORD': '${{ env.POSTGRES_PASSWORD }}', 'HOST': 'localhost', 'PORT': '5432'}}" >> src/core/settings_test.py

    - name: Run tests
      env:
        POSTGRES_DB: test_db
        POSTGRES_USER: test_user
        POSTGRES_PASSWORD: test_pass
        DJANGO_SETTINGS_MODULE: core.settings_test
        PYTHONPATH: /github/workspace/src
      run: |
        cd src
        python -c "import sys; print('Python path:', sys.path)"
        python -c "from django.conf import settings; print('Installed apps:', settings.INSTALLED_APPS)"
        pytest apps/ --cov=apps --cov-report=xml -v

    - name: Upload coverage
      uses: codecov/codecov-action@v3
name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: python:3.11-bullseye
      options: --user root

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - "5432:5432"

    steps:
    - uses: actions/checkout@v4

    - name: Verify structure
      run: |
        ls -la src/
        [ -f src/setup.py ] || echo "WARNING: setup.py missing - creating temporary one" && echo "from setuptools import setup, find_packages; setup(name='real_estate', version='0.1', packages=find_packages(where='src'), package_dir={'': 'src'})" > src/setup.py

    - name: Install system packages
      run: |
        apt-get update
        apt-get install -y build-essential libpq-dev python3-venv

    - name: Setup Python environment
      run: |
        python3 -m venv /opt/venv
        . /opt/venv/bin/activate  # Using dot instead of source
        pip install --upgrade pip
        pip install django psycopg2-binary pytest pytest-django
        pip install -e src/

    - name: Create test settings
      run: |
        mkdir -p src/core/
        cat << EOF > src/core/settings_test.py
        SECRET_KEY = 'test-key-123'
        INSTALLED_APPS = [
            'django.contrib.auth',
            'django.contrib.contenttypes',
            'apps.listings',
        ]
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': '${{ env.POSTGRES_DB }}',
                'USER': '${{ env.POSTGRES_USER }}',
                'PASSWORD': '${{ env.POSTGRES_PASSWORD }}',
                'HOST': 'localhost',
                'PORT': '5432',
            }
        }
        EOF

    - name: Run tests
      env:
        POSTGRES_DB: test_db
        POSTGRES_USER: test_user
        POSTGRES_PASSWORD: test_pass
        DJANGO_SETTINGS_MODULE: core.settings_test
        PYTHONPATH: /github/workspace/src:/opt/venv/lib/python3.11/site-packages
      run: |
        . /opt/venv/bin/activate
        cd src
        python -c "import django; print(f'Django {django.__version__} installed')"
        python -c "from django.conf import settings; print('Apps:', settings.INSTALLED_APPS)"
        pytest apps/ --cov=apps --cov-report=xml -v

    - name: Upload coverage
      uses: codecov/codecov-action@v3
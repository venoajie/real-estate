name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: python:3.11-bullseye
      options: --user root

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Install system packages
      run: |
        apt-get update
        apt-get install -y build-essential libpq-dev postgresql-client

    - name: Set up Python virtual environment
      run: |
        python -m venv venv
        . venv/bin/activate

    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r src/requirements/base.txt
        python -m pip install psycopg2-binary pytest pytest-django pytest-cov

    - name: Create test settings
      run: |
        mkdir -p src/real_estate/settings/
        cat << EOF > src/real_estate/settings/test.py
        from .base import *
        
        SECRET_KEY = 'test-key-123'
        
        INSTALLED_APPS = [
            'django.contrib.admin',
            'django.contrib.auth',
            'django.contrib.contenttypes',
            'django.contrib.sessions',
            'django.contrib.messages',
            'django.contrib.staticfiles',
            'apps.listings',
            'apps.users',
        ]
        
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': 'test_db',
                'USER': 'test_user',
                'PASSWORD': 'test_pass',
                'HOST': 'postgres',
                'PORT': '5432',
            }
        }
        
        EOF

    - name: Verify database connection
      run: |
        echo "Waiting for PostgreSQL..."
        for i in {1..30}; do
          if PGPASSWORD=test_pass psql -h postgres -U test_user -d test_db -c "SELECT 1"; then
            echo "PostgreSQL is ready!"
            exit 0
          fi
          sleep 2
        done
        echo "PostgreSQL not ready after 60 seconds"
        exit 1

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: real_estate.settings.test
        PYTHONPATH: /github/workspace/src
      run: |
        cd src
        python -m django --version
        python manage.py check
        pytest apps/ --ds=real_estate.settings.test --cov=apps --cov-report=xml -v
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3